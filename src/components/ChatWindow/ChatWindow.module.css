.chatWindow {
  all: initial; /*This resets all properties*/
  font-family: "Roboto", sans-serif;
  font-size: 16px; /* Base font size */
  color: var(--mantine-text-color);
  background-color: #fff;

  max-width: em(360px); /* Adjust height in .scrollArea */
  width: 90vw;

  position: fixed;
  bottom: em(115px);
  margin: 0 em(30px);
  right: 0;
  border: unset;
  outline: 1px solid var(--mantine-blue-medium);
  border-radius: em(5px);
  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
}

@media screen and (max-width: 480px) {
  .chatWindow {
    font-size: 15px;
    bottom: em(90px);
  }
}

/* ====== CHAT HEADER ======= */

.chatWindowHeader {
  text-align: left;
  padding: em(10px);
  border-bottom: 2px solid var(--mantine-blue-light);
  height: em(50px);

  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chatWindowHeader p {
  margin: 0;
}

.buttons {
  display: flex;
  align-items: center;
  gap: em(3px);
}

.reloadBtn {
  width: em(25px);
  height: em(25px);
}

.closeBtn {
  width: em(30px);
  height: em(30px);
}

.reloadBtn:hover,
.closeBtn:hover {
  cursor: pointer;
  filter: drop-shadow(
    0px 4px 2px rgba(0, 0, 0, 0.25)
  ); /* can't use box-shadow because it will apply a white square box around svg */
}

.reloadBtn:active,
.closeBtn:active {
  transform: translateY(1px) scale(0.95); /* Move down and slightly scale down */
  filter: none;
}

/* ====== CHAT BODY ======= */

.helperTextRoot {
  position: absolute;
  background-color: #fff;
  z-index: 1;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px;
  padding: em(10px);
}

.helperTextMessage {
  color: var(--mantine-text-color);
  font-size: em(12px);
  text-align: center;
}

.scrollArea {
  height: em(550px);
}

@media screen and (max-height: 750px) {
  .scrollArea {
    max-height: calc(75vh - 100px);
  }
}

.msgBubble {
  padding: em(10px);
  margin: em(15px);
  border-radius: em(5px);
  background-color: var(--mantine-blue-soft);
  width: fit-content;
  max-width: 85%;
  text-align: left;
  white-space: pre-wrap;
}

.rightSide {
  margin-left: auto;
  background-color: var(--mantine-yellow-soft);
}

.optionsContainer {
  display: flex;
  flex-wrap: wrap;
  margin: em(15px);
  gap: em(15px 10px);
}

.optionText {
  height: em(36);
  padding: 0 em(18);
  font-size: em(14);
  color: var(--mantine-blue-vivid);
  background-color: rgba(255, 255, 255, 0.48);
  border: 1px solid var(--mantine-blue-vivid);
  border-radius: em(20px) !important;
}

.optionText:hover {
  text-decoration: underline;
  background-color: var(--mantine-blue-soft);
}

.loader {
  width: 100%;
  position: absolute;
  bottom: 0;
}

.alert {
  background-color: var(--mantine-color-red-2);
  padding: em(10px);
  width: 100%;
  text-align: center;
  position: absolute;
  top: 0;
}

.alert :global(.m_7fa78076) {
  font-size: 14px;
  color: var(--mantine-color-gray-7);
}

.disabledOptions {
  cursor: not-allowed;
  background-color: transparent;
  color: var(--mantine-color-gray-5);

  &.optionText {
    background-color: var(--mantine-color-gray-1);
    text-decoration: none;
  }
}

/* ====== CHAT FOOTER (TEXT INPUT) ======= */

.textInputContainer {
  display: flex;
  align-items: center;
  border-top: 2px solid var(--mantine-blue-light);
  height: em(50px);
}

.textInputRoot {
  flex-grow: 1;
}

.textInput {
  color: var(--mantine-text-color);
  font-size: em(15);
  border: none;
  -webkit-text-size-adjust: 100%; /* prevent zoom when touch on text input on ios*/
}

.textInput input::placeholder {
  color: #3b3b3b;
}

.disabled {
  cursor: not-allowed;
  background-color: var(--mantine-color-gray-1);
}
