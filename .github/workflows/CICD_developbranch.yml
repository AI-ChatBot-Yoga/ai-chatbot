name: Deploy cloudfront branch to AWS S3

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      # Ensure ai-chatbot directory exists
      - name: Create ai-chatbot directory if not exists
        run: mkdir -p ai-chatbot

      # Create and setup .env file
      - name: Create .env file
        run: |
          if [ -f ".env" ]; then
            cp .env ./ai-chatbot/.env
          else
            echo "VITE_CORE_API_BASE_URL=${{ secrets.VITE_CORE_API_BASE_URL }}" > ./ai-chatbot/.env
            echo "VITE_API_VERSION=${{ secrets.VITE_API_VERSION }}" >> ./ai-chatbot/.env
          fi

      # Debug: Print directory structure and .env contents
      - name: Print debug information
        run: |
          echo "Current directory:"
          pwd
          echo "Directory structure:"
          ls -R
          echo "Contents of ai-chatbot/.env:"
          cat ./ai-chatbot/.env

      - name: Build project
        working-directory: ./ai-chatbot
        run: pnpm build
        env:
          VITE_CORE_API_BASE_URL: ${{ secrets.VITE_CORE_API_BASE_URL }}
          VITE_API_VERSION: ${{ secrets.VITE_API_VERSION }}

      - name: List dist contents
        working-directory: ./ai-chatbot
        run: ls -R dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Sync files to S3
        working-directory: ./ai-chatbot
        run: |
          aws s3 sync dist s3://develop-ai-branch --delete

      - name: Debug CloudFront Distribution ID
        run: echo "CloudFront Distribution ID is set to '${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}'"

      - name: Verify CloudFront Distribution ID
        run: |
          if [ -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            echo "CLOUDFRONT_DISTRIBUTION_ID is not set"
            exit 1
          else
            echo "CLOUDFRONT_DISTRIBUTION_ID is set to '${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}'"
          fi

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}