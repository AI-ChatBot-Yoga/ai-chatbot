name: Deploy cloudfront branch to AWS S3

on:
  push:
    branches:
      - yotlaire-new-branch

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]

    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      # Set up Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      # Print the current directory for debugging
      - name: Debug - Print directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory structure:"
          ls -R

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Copy the .env file to the working directory
      - name: Copy .env file
        run: |
          if [ -f ".env" ]; then
            echo "Copying .env to ai-chatbot directory..."
            cp .env ./ai-chatbot/.env
          else
            echo ".env file not found!"
            exit 1
          fi

      # Verify the contents of the .env file
      - name: Verify .env file contents
        run: |
          echo "Contents of .env file:"
          cat ./ai-chatbot/.env

      # Ensure the .env file is present after copying
      - name: Ensure .env is still present
        run: |
          if [ -f "./ai-chatbot/.env" ]; then
            echo ".env file exists"
          else
            echo ".env file is missing"
            exit 1
          fi

      # Build the project
      - name: Build project
        run: pnpm build

      # List the directory structure after the build
      - name: List directory structure after build
        run: ls -R

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # Sync files to S3
      - name: Sync files to S3
        run: |
          if [ -d "dist" ]; then
            aws s3 sync dist s3://develop-ai-branch --delete
          elif [ -d "ai-chatbot/dist" ]; then
            aws s3 sync ai-chatbot/dist s3://develop-ai-branch --delete
          else
            echo "dist directory not found, cannot sync to S3"
            exit 1
          fi

      # Verify CloudFront Distribution ID
      - name: Verify CloudFront Distribution ID
        run: |
          if [ -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            echo "CLOUDFRONT_DISTRIBUTION_ID is not set"
            exit 1
          else
            echo "CloudFront Distribution ID is '${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}'"
          fi

      # Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
