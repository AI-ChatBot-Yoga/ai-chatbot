name: Deploy to AWS S3

on:
  push:
    branches:
      - experimental-s3

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Verify build output
        run: |
          echo "Verifying build output..."
          if [ ! -f dist/index.html ]; then
            echo "index.html not found in dist directory"
            exit 1
          fi
          echo "index.html found in dist directory"

      - name: List build directory contents
        run: ls -la dist

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist

      - name: List downloaded artifact contents
        run: ls -la dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Sync files to S3
        run: |
          aws s3 sync dist s3://main-branch --acl public-read --delete


    #  - name: Invalidate CloudFront cache
    #   run: |
    #     aws cloudfront create-invalidation --distribution-id your-distribution-id --paths "/*"
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

